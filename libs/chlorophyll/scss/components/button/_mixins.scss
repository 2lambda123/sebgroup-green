@use '../../tokens' as tokens;
@use '../../common';
@use 'sass:map';

$button-primary-bg: tokens.get(tokens.$blue, 0);
$button-primary-color: common.most-legible-color($button-primary-bg);
$button-primary-border-color: $button-primary-bg;
$button-secondary-bg: transparent;
$button-secondary-color: tokens.get(tokens.$blue, 0);
$button-secondary-border-color: $button-secondary-color;
$button-ghost-bg: tokens.get(tokens.$grey, 200);

@mixin reset {
  background-color: transparent;
  border: 0;
  cursor: pointer;
  font-family: inherit;
  padding: 0;
}

@mixin base {
  @include common.padding-horizontal(5);
  @include common.padding-vertical(4);
  @include common.add-border-radius();
  @include common.add-border();
  @include common.font-weight('medium');
  @include common.add-focus();
  min-height: 2.75rem;
  align-items: center;
  display: inline-flex;
  justify-content: center;

  @include common.media-breakpoint-down('sm') {
    min-width: 100%;
  }

  @media screen and (-ms-high-contrast: active) {
    border: 2px solid currentcolor;
  }

  &.small {
    min-height: 2rem;
    padding: 0.4375rem 0.75rem;
    line-height: 1.125rem;
  }

  &.large {
    min-height: 4rem;
    padding: 1rem 1.5rem;
    font-size: 1.5rem;
    line-height: 2rem;
  }
}

@mixin secondary {
  @include common.add-focus();
  @include common.add-hover-active-state();
  //@include common.add-active-focus-state();
  background: $button-secondary-bg;
  border-color: $button-secondary-border-color;
  color: $button-secondary-color;
  --color: #{$button-secondary-color};

  &:disabled,
  &.disabled,
  &[aria-disabled='true'] {
    @include common.add-disable(false, true, true);
  }
}

@mixin tertiary {
  @include common.add-focus();
  @include common.add-hover-active-state();
  //@include common.add-active-focus-state();
  background: $button-secondary-bg;
  border-color: transparent;
  color: $button-secondary-color;
  --color: #{$button-secondary-color};

  &:disabled,
  &.disabled,
  &[aria-disabled='true'] {
    @include common.add-disable(false, true, true);
  }
}

@mixin primary {
  @include common.add-hover-active-state();
  @include common.add-active-focus-state();
  background: $button-primary-bg;
  border-color: $button-primary-border-color;
  color: $button-primary-color;
  --color: #{$button-primary-color};

  &:disabled,
  &.disabled,
  &[aria-disabled='true'] {
    @include common.add-disable(
      $button-primary-bg,
      $button-primary-color,
      $button-primary-border-color
    );
  }
}

// TODO: handle themes (dark/light mode)
@mixin ghost-dark() {
  $ghost-color: tokens.get(tokens.$grey, 1000);
  @include common.add-hover-active-state($ghost-color, $ghost-color, true);
  @include common.add-active-focus-state($ghost-color);
  border-color: $ghost-color;
  color: $ghost-color;
  --color: #{$ghost-color};

  &:disabled,
  &.disabled,
  &[aria-disabled='true'] {
    @include common.add-disable(false, true, true);
  }
}

// TODO: handle themes (dark/light mode)
@mixin ghost-light() {
  $ghost-color: tokens.$white;
  @include common.add-hover-active-state($ghost-color, $ghost-color, true);
  @include common.add-active-focus-state($ghost-color);
  border-color: $ghost-color;
  color: $ghost-color;
  --color: #{$ghost-color};

  &:disabled,
  &.disabled,
  &[aria-disabled='true'] {
    @include common.add-disable(false, true, true);
  }
}

@mixin icon() {
  background-color: transparent;
  border: 0.0625rem solid transparent;
  padding: 0.625rem;
  height: 2.75rem;
  width: 2.75rem;
  min-width: auto;

  .form-group & {
    margin-top: -.625rem;
  }

  svg {
    height: 1rem;
    width: 1rem;
  }

  path, line, circle, rect, ellipse, polyline, text {
    fill: var(--gds-ref-pallet-base800);
    stroke: var(--gds-ref-pallet-base800);
    transition: all tokens.$transition-time;
  }

  &:hover {
    background-color: var(--gds-ref-pallet-base800);
    border-color: var(--gds-ref-pallet-base800);

    path, line, circle, rect, ellipse, polyline, text {
      fill: var(--gds-ref-pallet-base000);
      stroke: var(--gds-ref-pallet-base000);
    }
  }
}
