@layer tokens, a11y, base;

@layer tokens {
  :host {
    --_color-bg: var(--gds-sys-color-container-container);
    --_color-border: var(--gds-sys-color-stroke-stroke);
    --_color-outline-alpha: 40%;
    --_color-outline: color-mix(
      in srgb,
      var(--_color-border),
      transparent var(--_color-outline-alpha)
    );
    --_transition-property: all;
    --_transition-duration: 150ms;
    --_transition-function: cubic-bezier(0.4, 0, 0.2, 1);
    --_transition: var(--_transition-property)
      var(--_transition-duration)
      var(--_transition-function);
    --_border-radius: .5rem;
    --_border-width: .125rem;
    --_lh: 1.25;
    --_core-min-block-size: 3.5rem;
    --_gap: .5rem;
    --_padding-block: .625rem;
    --_padding-inline: 1rem;
    --_core-icon-size: 1.5rem;
    --_textarea-min-block-size: 2rem;
  }
}

@layer a11y {
  /* @media (prefers-color-scheme: dark) {
    :host {
      --_color-bg: var(--_color-bg-dark);
    }
  } */

  @media (prefers-reduced-motion: reduce) {
    :host {
      --_transition: none;
    }
  }

  @media (prefers-reduced-transparency: reduce) {
    :host {
      --_transparency: 1;
    }
  }

  /* @media (prefers-contrast: more) {
    :host {
      --_color-bg: hsla(60, 4%, 96%, 1);
      --_color-outline-alpha: 0%;
    }
  } */
}

@layer base {
  * {
    box-sizing: border-box;
  }

  :host {
    display: block;
    position: relative;
  }

  .head {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding-inline-end: 1rem;
  }

  label {
    font-weight: 400;
    transition: var(--gds-input-transition);
  }

  .foot {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding-inline-end: 1rem;

    gds-badge {
      align-self: flex-end;
    }
  }

  .supporting-text, .error-text {
    font-size: .875rem;
  }

  slot[name="extended-supporting-text"] {
    display: block;
    font-size: .875rem;
    background-color: #eee;
    padding: 1rem;
    margin-top: 0.5rem;
    border-radius: 0.5rem;
    border: 1px solid #ccc;
  }
  slot[name="extended-supporting-text"][hidden] {
    display: none;
  }

  input[type='number']::-webkit-inner-spin-button {
    display: none;
  }

  input {
    appearance: none;
    background-color: transparent;
    border: 0;
    width: 100%;
    overflow: hidden;
    margin: unset;
    outline: none;
    padding: unset;
    height: max-content;
    /* caret-color: accent;
    caret-shape: underscore; */
    box-sizing: border-box;
    font-size: var(--_fs);
    line-height: var(--_lh);
    transition: var(--_transition);

    &::placeholder {
      font-family: inherit;
    }

    &:focus:not(:focus-visible) {
      outline: none;
    }

    &::-webkit-inner-spin-button,
    &::-webkit-calendar-picker-indicator {
      appearance: none;
      background-color: rgb(195, 0, 255);
      background-image: none;
      height: 100%;
      position: absolute;
      right: 0;
      top: 0;
      width: 40px;
    }
  }

  .field {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    gap: var(--_gap);

    cursor: text;

    block-size: max-content;
    /* min-inline-size: var(--_width); */
    min-block-size: var(--_core-min-block-size);

    background-color: var(--_color-bg);

    border: var(--_border-width) solid transparent;
    border-block-end-color: transparent;
    border-start-end-radius: var(--_border-radius);
    border-start-start-radius: var(--_border-radius);

    box-shadow: 0 var(--_border-width) 0
      var(--_color-border);
    padding-block: var(--_padding-block);
    padding-inline: var(--_padding-inline);
    margin-block: var(--_gap);

    position: relative;

    transition: var(--_transition);

    outline-style: solid;
    outline-offset: var(--_border-width);
    outline-width: calc(var(--_border-width));
    outline-color: transparent;

    &:focus:not(:focus-visible) {
      outline: none;
    }

    &:hover {
      box-shadow: 0 var(--_border-width) 0 currentColor;
    }

    &:has(input:focus) {
      outline-color: var(--_color-outline);
      border-radius: var(--_border-radius);
      box-shadow: none;
      transition: var(--_transition);
    }
  }

  :host(:invalid) .field {
    --_color-bg: var(--gds-sys-color-status-negative-negative-bright);
    --_color-border: var(--gds-sys-color-stroke-stroke-negative);
    --_color-outline: var(--gds-sys-color-stroke-stroke-negative);
    color: var(--gds-sys-color-status-negative-on-negative-bright);
  }
  :host(:invalid) .error-text {
    color: var(--gds-sys-color-status-negative-on-negative-bright);
  }
}
