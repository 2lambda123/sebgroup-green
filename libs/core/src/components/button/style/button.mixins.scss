@mixin tokens() {
  // Sizing
  --gds-button-fs: var(--gds-fs-base);
  --gds-button-gap: var(--gds-sys-gap-small);

  // Motion
  --gds-button-transition: var(--gds-sys-transition);

  // Padding
  --gds-button-padding-inline: var(--gds-sys-padding-inline);
  --gds-button-padding-block: var(--gds-sys-padding-block);

  // Border tokens
  --gds-button-border-radius: var(--gds-sys-border-radius);
  --gds-button-border-width: var(--gds-sys-border-width);
  --gds-button-border-style: var(--gds-sys-border-style);

  // Colors
  --gds-button-color-bg: var(--gds-color-grey-20);
  --gds-button-color-text: var(--gds-color-text-inverse);
  --gds-button-color-border: var(--gds-sys-border-color);

  --gds-button-color-outline-alpha: 60%;
  --gds-button-color-outline: color-mix(in srgb,
  var(--gds-button-color-border),
  transparent var(--gds-button-color-outline-alpha));
}

@mixin tokens-a11y {
  @media (prefers-color-scheme: dark) {
    :host {
      --gds-button-color-bg-dark: var(--gds-color-grey-90);
    }
  }
  @media (prefers-reduced-motion: reduce) {
    :host {
      --gds-button-transition: none;
    }
  }
}

@mixin containment {
  /*
    Containment
    cqw: 1% of a query container's width
    cqh: 1% of a query container's height
    cqi: 1% of a query container's inline size
    cqb: 1% of a query container's block size
    cqmin: The smaller value of either cqi or cqb
    cqmax: The larger value of either cqi or cqb
  */
  // ::sloted(:not([slot])) {
  //   contain: layout;
  //   container-type: inline-size;
  //   container-name: button;
  //   isolation: isolate;
  //   max-width: 20ch;
  //   width: auto;
  // }

  // @container gds-button (width < 200ch) {
  button slot:not([name]) {
    display: inline-block;
    //max-width: 20ch;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  //}
}

@mixin core() {
  // Spacing
  align-items: center;

  // Coloring
  background-color: var(--gds-button-color-bg);
  block-size: 100%;

  // Border style
  border-color: var(--gds-button-color-border);
  border-radius: var(--gds-button-border-radius);
  border-style: var(--gds-button-border-style);
  border-width: var(--gds-button-border-width);
  box-sizing: border-box;
  color: var(--gds-button-color-text);
  color-scheme: dark light;
  cursor: pointer;

  // General
  display: inline-flex;
  gap: var(--gds-button-gap);
  height: var(--gds-button-size);

  // Sizing
  inline-size: 100%;
  justify-content: space-between;
  justify-items: center;
  outline-color: transparent;
  outline-offset: 2px;
  outline-style: solid;
  outline-width: 2px;
  padding-block: var(--gds-button-padding-block);
  padding-inline: var(--gds-button-padding-inline);
  position: relative;
  transition: var(--gds-button-transition);

  &:focus {
    outline-color: var(--gds-button-color-outline);

    &:not(:focus-visible) {
      outline-color: transparent;
    }
  }

  &:hover {
    --gds-button-color-bg: hsla(60, 4%, 5%, 1);
  }

  &:active {
    --gds-button-color-bg: var(--gds-color-grey-20);
  }

  &:disabled {
    background-color: var(--gds-color-grey-98);
    border-color: var(--gds-color-grey-98);
    color: var(--gds-color-grey-60);
    pointer-events: none;
  }
}

@mixin secondary() {
  --gds-button-color-bg: var(--gds-color-text-inverse);
  --gds-button-color-text: var(--gds-color-text-primary);
  --gds-button-color-border: var(--gds-color-text-primary);

  &:hover {
    --gds-button-color-bg: var(--gds-color-grey-90);
  }

  &:active {
    --gds-button-color-bg: var(--gds-color-text-inverse);
  }
}

@mixin tertiary() {
  --gds-button-color-bg: transparent;
  --gds-button-color-text: var(--gds-color-text-primary);
  --gds-button-color-border: transparent;

  &:hover {
    --gds-button-color-bg: var(--gds-color-grey-90);
    --gds-button-color-border: var(--gds-color-text-primary);
  }

  &:active {
    --gds-button-color-bg: transparent;
    --gds-button-color-border: transparent;
  }
}

@mixin primary-positive() {
  --gds-button-color-bg: var(--gds-color-green-40);
  --gds-button-color-text: var(--gds-color-text-inverse);
  --gds-button-color-border: var(--gds-color-green-40);

  &:hover {
    --gds-button-color-bg: var(--gds-color-green-25);
    --gds-button-color-border: var(--gds-color-green-25);
  }

  &:active {
    --gds-button-color-bg: var(--gds-color-green-40);
  }

  &:focus {
    outline-color: var(--gds-color-green-40);

    &:not(:focus-visible) {
      outline-color: transparent;
    }
  }
}

@mixin secondary-positive() {
  --gds-button-color-bg: var(--gds-color-text-inverse);
  --gds-button-color-text: var(--gds-color-green-40);
  --gds-button-color-border: var(--gds-color-green-40);

  &:hover {
    --gds-button-color-bg: var(--gds-color-green-98);
  }

  &:active {
    --gds-button-color-bg: var(--gds-color-text-inverse);
  }

  &:focus {
    outline-color: var(--gds-color-green-40);

    &:not(:focus-visible) {
      outline-color: transparent;
    }
  }
}

@mixin tertiary-positive() {
  --gds-button-color-bg: transparent;
  --gds-button-color-text: var(--gds-color-green-40);
  --gds-button-color-border: transparent;

  &:hover {
    --gds-button-color-bg: var(--gds-color-green-98);
    --gds-button-color-border: var(--gds-color-green-40);
  }

  &:active {
    --gds-button-color-bg: transparent;
    --gds-button-color-border: transparent;
  }

  &:focus {
    outline-color: var(--gds-color-green-40);

    &:not(:focus-visible) {
      outline-color: transparent;
    }
  }
}

// Negative
@mixin primary-negative() {
  --gds-button-color-bg: var(--gds-color-red-40);
  --gds-button-color-text: var(--gds-color-text-inverse);
  --gds-button-color-border: var(--gds-color-red-40);

  &:hover {
    --gds-button-color-bg: var(--gds-color-red-25);
    --gds-button-color-border: var(--gds-color-red-25);
  }

  &:active {
    --gds-button-color-bg: var(--gds-color-red-40);
    --gds-button-color-border: var(--gds-color-red-40);
  }

  &:focus {
    outline-color: var(--gds-color-red-25);

    &:not(:focus-visible) {
      outline-color: transparent;
    }
  }
}

@mixin secondary-negative() {
  --gds-button-color-bg: var(--gds-color-text-inverse);
  --gds-button-color-text: var(--gds-color-red-40);
  --gds-button-color-border: var(--gds-color-red-40);

  &:hover {
    --gds-button-color-bg: var(--gds-color-red-95);
  }

  &:active {
    --gds-button-color-bg: var(--gds-color-text-inverse);
  }

  &:focus {
    outline-color: var(--gds-color-red-40);

    &:not(:focus-visible) {
      outline-color: transparent;
    }
  }
}

@mixin tertiary-negative() {
  --gds-button-color-bg: transparent;
  --gds-button-color-text: var(--gds-color-red-40);
  --gds-button-color-border: transparent;

  &:hover {
    --gds-button-color-bg: var(--gds-color-red-95);
    --gds-button-color-border: var(--gds-color-red-40);
  }

  &:active {
    --gds-button-color-bg: transparent;
    --gds-button-color-border: transparent;
  }

  &:focus {
    outline-color: var(--gds-color-red-40);

    &:not(:focus-visible) {
      outline-color: transparent;
    }
  }
}

// Accent
@mixin primary-accent() {
  --gds-button-color-bg: hsla(40, 89%, 64%, 1);
  --gds-button-color-text: hsla(60, 4%, 20%, 1);
  --gds-button-color-border: hsla(40, 89%, 64%, 1);

  &:hover {
    --gds-button-color-bg: hsla(39, 68%, 57%, 1);
    --gds-button-color-border: hsla(39, 68%, 57%, 1);
  }

  &:active {
    --gds-button-color-bg: hsla(40, 53%, 51%, 1);
    --gds-button-color-border: hsla(40, 53%, 51%, 1);
  }

  &:focus {
    outline-color: var(--gds-color-red-25);

    &:not(:focus-visible) {
      outline-color: transparent;
    }
  }
}

@mixin secondary-accent() {
  --gds-button-color-bg: var(--gds-color-text-inverse);
  --gds-button-color-text: hsla(60, 4%, 20%, 1);
  --gds-button-color-border: hsla(40, 89%, 64%, 1);

  &:hover {
    --gds-button-color-bg: var(--gds-color-red-95);
  }

  &:active {
    --gds-button-color-bg: var(--gds-color-text-inverse);
  }

  &:focus {
    outline-color: var(--gds-color-red-40);

    &:not(:focus-visible) {
      outline-color: transparent;
    }
  }
}

@mixin tertiary-accent() {
  --gds-button-color-bg: transparent;
  --gds-button-color-text: hsla(60, 4%, 20%, 1);
  --gds-button-color-border: transparent;

  &:hover {
    --gds-button-color-bg: hsla(39, 68%, 57%, 1);
    --gds-button-color-border: hsla(39, 68%, 57%, 1);
  }

  &:active {
    --gds-button-color-bg: transparent;
    --gds-button-color-border: transparent;
  }

  &:focus {
    outline-color: var(--gds-color-red-40);

    &:not(:focus-visible) {
      outline-color: transparent;
    }
  }
}

// Sizes

@mixin size-small() {
  --gds-button-padding-inline: var(--gds-spacing-5);
  --gds-button-padding-block: var(--gds-spacing-3);
  --gds-button-size: 2rem;
}

@mixin size-medium() {
  --gds-button-padding-inline: var(--gds-spacing-5);
  --gds-button-padding-block: var(--gds-spacing-3);
  --gds-button-size: 2.5rem;
}

@mixin size-large() {
  --gds-button-padding-inline: var(--gds-spacing-5);
  --gds-button-padding-block: var(--gds-spacing-4);
  --gds-button-size: 3rem;
}

// Split variant
@mixin variant-split() {
  display: flex;
  gap: 8px;

  button:last-child {
    align-items: center;
    aspect-ratio: 1/1;
    display: flex;
    justify-content: center;
    padding: 0;

    ::slotted(gds-icon) {
      align-items: center;
      display: flex;
      height: 24px;
      justify-content: center;
      width: 24px;
    }
  }
}

// Circle variant
@mixin variant-circle() {
  align-items: center;
  aspect-ratio: 1/1;
  height: var(--gds-button-size);
  justify-content: center;
  padding: 0;
  width: var(--gds-button-size);

  ::slotted(gds-icon) {
    align-items: center;
    display: flex;
    height: 24px;
    justify-content: center;
    width: 24px;
  }
}
